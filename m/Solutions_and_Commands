Exercise 1
    Task 1
        Original: processed(A,R) :- ordered(O,A), shelved(S,A), isRobot(R), position(S,C,0), position(R,C,horizon).
        Modified: processed(A,R) :- ordered(O,A), shelved(S,A), isRobot(R), position(S,C,0), position(R,C,T), time(T).

        clingo --out-atomf='%s.' -V0 -c horizon=15 m/{action-M.lp,goal-M-mod.lp,output-M.lp} instances/x11_y6_n66_r1_s8_ps1_pr8_u8_o8_N001.lp
        cat out | head -n1 | $VISUALIZER
    Task 2
        Original: direction((X,Y)) :- X=-1..1, Y=-1..1, |X+Y|=1.
        Modified: direction((X,Y)) :- X=-1..1, Y=-1..1, |X+Y|=1.
                  direction((X,Y)) :- X=-1..1, Y=-1..1, |X|+|Y|=2.

        clingo --out-atomf='%s.' -V0 -c horizon=10 m/{action-M-mod.lp,goal-M-mod.lp,output-M.lp} instances/x11_y6_n66_r1_s8_ps1_pr8_u8_o8_N001.lp > out
        cat out | head -n1 | $VISUALIZER

Exercise 2
    Task 1
        Original:   moveto(C',C,T) :- nextto(C',D,C), position(R,C',T-1), move(R,D,T).
                    :- moveto(C',C,T), moveto(C,C',T), C < C'.
        Modified:
             crossFront() :- isRobot(R), isRobot(R'), R < R', X=1, Y=1, X'=-1, move(R,(X,Y), T), move(R',(X',Y),T).
             crossRear() :- isRobot(R), isRobot(R'), R < R', X=1, Y=-1, X'=-1, move(R,(X,Y), T), move(R',(X',Y),T).
             crossRight() :- isRobot(R), isRobot(R'), R < R', Y=1, Y'=-1, X=-1, move(R,(X,Y'), T), move(R',(X,Y),T).
             crossLeft() :- isRobot(R), isRobot(R'), R < R', Y=1, Y'=-1, X=1, move(R,(X,Y'), T), move(R',(X,Y),T).
             :- not crossFront().
             :- not crossRear().
             :- not crossRight().
             :- not crossLeft().
        Explanation:
            There are 2 cases for crossing crossing with x=1 and x=-1 and y =1 meaning two robots going forward and one moving left and the other right
            The other cases is both moving right x=1 and one up one y=1 and one down one y=-1 or moving left

        clingo --out-atomf='%s.' -V0 -c horizon=20 m/{action-M-mod.lp,goal-M.lp,output-M.lp} instances/x11_y6_n66_r8_s8_ps1_pr8_u8_o8_N001.lp > out
        cat out | head -n1 | $VISUALIZER

Shortcuts
/Users/home/opt/anaconda3/envs/project4/bin/viz = $VISUALIZER

Save output to file for visualizer
clingo --out-atomf='%s.' -V0 -c horizon=10 m/action-M-mod.lp m/goal-M-mod.lp m/output-M.lp instances/x11_y6_n66_r1_s8_ps1_pr8_u8_o8_N001.lp > out

Run visualizer
cat out | head -n1 | $VISUALIZER
